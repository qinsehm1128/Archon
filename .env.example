# Archon Configuration Template - Qwen Local Embedding Version
# This version uses Qwen3-Embedding-0.6B for completely offline operation

# Get your SUPABASE_URL from the Data API section of your Supabase project settings -
# https://supabase.com/dashboard/project/<your project ID>/settings/api
SUPABASE_URL=

# ‚ö†Ô∏è CRITICAL: You MUST use the SERVICE ROLE key, NOT the Anon key! ‚ö†Ô∏è
# 
# COMMON MISTAKE: Using the anon (public) key will cause ALL saves to fail with "permission denied"!
#
# How to get the CORRECT key:
# 1. Go to: https://supabase.com/dashboard/project/<your project ID>/settings/api
# 2. In the Settings menu, click on "API keys" 
# 3. Find "Project API keys" section
# 4. You will see TWO keys - choose carefully:
#    ‚ùå anon (public): WRONG - This is shorter, starts with "eyJhbGc..." and contains "anon" in the JWT
#    ‚úÖ service_role (secret): CORRECT - This is longer and contains "service_role" in the JWT
#
# The service_role key is typically much longer than the anon key.
# If you see errors like "Failed to save" or "Permission denied", you're using the wrong key!
#
# On the Supabase dashboard, it's labeled as "service_role" under "Project API keys"
SUPABASE_SERVICE_KEY=

# Optional: Set log level for debugging
LOGFIRE_TOKEN=
LOG_LEVEL=INFO

# Service Ports Configuration
# These ports are used for external access to the services
HOST=localhost
ARCHON_SERVER_PORT=8181
ARCHON_MCP_PORT=8051
ARCHON_AGENTS_PORT=8052
ARCHON_UI_PORT=3737
ARCHON_DOCS_PORT=3838

# Frontend Configuration
# VITE_ALLOWED_HOSTS: Comma-separated list of additional hosts allowed for Vite dev server
# Example: VITE_ALLOWED_HOSTS=192.168.1.100,myhost.local,example.com
# If not set, defaults to localhost, 127.0.0.1, ::1, and the HOST value above
VITE_ALLOWED_HOSTS=

# Development Tools
# VITE_SHOW_DEVTOOLS: Show TanStack Query DevTools (for developers only)
# Set to "true" to enable the DevTools panel in bottom right corner
# Defaults to "false" for end users
VITE_SHOW_DEVTOOLS=false

# When enabled, PROD mode will proxy ARCHON_SERVER_PORT through ARCHON_UI_PORT. This exposes both the 
# Archon UI and API through a single port. This is useful when deploying Archon behind a reverse 
# proxy where you want to expose the frontend on a single external domain.
PROD=false

# ======================
# Local Embedding Model Configuration (Qwen3-Embedding-0.6B)
# ======================
# Dimensions for embedding vectors (1024 for Qwen3-Embedding-0.6B)
EMBEDDING_DIMENSIONS=1024

# Disable contextual embeddings (no LLM API needed for local model)
USE_CONTEXTUAL_EMBEDDINGS=false

# ======================
# Deployment Notes
# ======================
# ü§ñ Local AI Model: Qwen3-Embedding-0.6B (1.2GB)
#    - Automatically downloaded on first crawl
#    - Stored in ./models directory
#    - Completely offline operation
#    - Zero API costs
#
# üìã Setup Steps:
# 1. Copy this file: cp .env.example .env
# 2. Set SUPABASE_URL and SUPABASE_SERVICE_KEY above
# 3. Create models directory: mkdir models
# 4. Run: docker compose --profile full up -d --build
# 5. Initialize database: Run migration/complete_setup.sql in Supabase
# 6. Access frontend: http://localhost:3737
#
# üíæ Requirements:
#    - 4GB+ RAM (recommended 8GB)
#    - 5GB+ storage (1.2GB model + data)
#    - Docker and docker-compose
#
# NOTE: No OpenAI API key needed! This version runs completely offline.
